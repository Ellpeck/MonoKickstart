This is MonoKickstart, a standalone Mono "kick" application to run C# programs
on GNU/Linux and Mac OSX without depending on a system installation of Mono.

License
-------
kick.c is released under the zlib license. See LICENSE for details.

binreloc is released under the WTFPL license. See binreloc.LICENSE for details.

About MonoKickstart
-------------------
Originally developed by Edward Rudd for Bastion, MonoKickstart is a reworking of
the stock generated kickstart code from Mono to easily run C# applications on
*nix platforms. Mac OSX support was added in 2013 for MonoGame-SDL2 titles.

About the precompiled/ Folder
-----------------------------
We have provided a precompiled MonoKickstart application for you to use in your
programs. Included are kick binaries and libmono binaries for Mac OSX and Linux
(both x86 and x86_64, OSX uses Universal Binaries). We have also provided the
C# assemblies needed by MonoGame as well as a "./Kick" script to automatically
choose the right binary for the operating system and architecture.

To use the precompiled MonoKickstart, simply rename the kick.bin.* binaries to
the name of your .exe assembly (for instance, MyGame.bin.x86 starts MyGame.exe).
Additionally, modify "Kick" to run those newly named kick binaries rather than
the generic "kick" name. The name of "Kick" itself can be whatever you like.

If you wish to use additional shared libraries (for instance, libSDL2), simply
add the library to the architecture's lib folder:

Linux (32-bit): lib/
Linux (64-bit): lib64/
Mac OSX (Universal): osx/

Building for OSX
----------------

For OSX we need Universal binaries. By default the cmake command from SDL will only build 64 bit.
The following commands should be used to generate a universal binary

'''
  cmake -DCMAKE_OSX_ARCHITECTURES="i386;x86_64"  $(PATH_TO_CMakeLists.txt)
  make
'''

To build the mcs.bin.osx universal binary we need to use mkbundle and lipo to create
the binary manually

'''
# Ensure it can find pkg-config:
export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/pkgconfig:/Library/Frameworks/Mono.framework/Versions/Current/lib/pkgconfig

# Force 32bit build:
export AS="as -arch i386"
export CC="cc -arch i386 -lobjc -liconv -framework Foundation"

mkbundle -o mcs.i386.bin -L /Library/Frameworks/Mono.framework/Versions/Current/lib/mono/4.5/ /Library/Frameworks/Mono.framework/Versions/Current/lib/mono/4.5/mcs.exe

# Force 64bit build 
export AS="as -arch x86_64"
export CC="cc -arch x86_64 -lobjc -liconv -framework Foundation"

mkbundle -o mcs.x86_64.bin -L /Library/Frameworks/Mono.framework/Versions/Current/lib/mono/4.5/ /Library/Frameworks/Mono.framework/Versions/Current/lib/mono/4.5/mcs.exe

# create our universal binary
lipo -create mcs.i386.bin mcs.x86_64.bin -output mcs.bin.osx

'''


